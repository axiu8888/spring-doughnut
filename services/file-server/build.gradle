plugins {
  id 'org.springframework.boot' version "$springbootVersion"
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
  id 'java'
//  id 'org.springframework.experimental.aot' version "$springExperimentalAotVersion"
}

apply from: "${scriptFile}"


dependencies {

  [
      project(":minio"),

      "io.springfox:springfox-boot-starter:${swaggerVersion}",
      "com.github.xiaoymin:knife4j-openapi2-spring-boot-starter:${knife4jVersion}",

      "org.aspectj:aspectjweaver:${aspectjVersion}",
      'org.springframework.boot:spring-boot-devtools',
      "org.springframework.boot:spring-boot-starter-web",

      // redis
      //"org.springframework.boot:spring-boot-starter-data-redis",
      //'io.github.swagger2markup:swagger2markup:1.3.4',

      "com.squareup.okhttp3:okhttp:${okHttpVersion}",
      "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
      "com.squareup.retrofit2:retrofit:${retrofitVersion}",
      "com.squareup.retrofit2:adapter-rxjava3:${retrofitVersion}",
      "com.squareup.retrofit2:converter-scalars:${retrofitVersion}",
      "io.reactivex.rxjava3:rxjava:${rxJavaVersion}",

  ].forEach {
    implementation(it)
  }
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

}

test {
  useJUnitPlatform()
}