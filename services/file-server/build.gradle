plugins {
  id 'org.springframework.boot' version "$springbootVersion"
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
  id 'java'
//  id 'org.springframework.experimental.aot' version "$springExperimentalAotVersion"
}

apply from: "${scriptFile}"


dependencies {
  implementation(project(":minio"))
  implementation 'org.springframework.boot:spring-boot-devtools'

  implementation "org.aspectj:aspectjweaver:${aspectjVersion}"
  implementation("org.springframework.boot:spring-boot-starter-web")
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
  // redis
  implementation "org.springframework.boot:spring-boot-starter-data-redis"

  implementation "io.springfox:springfox-boot-starter:${swaggerVersion}"
  implementation 'com.github.xiaoymin:knife4j-spring-boot-starter:3.0.3'
  //implementation 'io.github.swagger2markup:swagger2markup:1.3.4'

  // OkHttp + RxJava + Retrofit
  [
      "com.squareup.okhttp3:okhttp:${okHttpVersion}",
      "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
      "com.squareup.retrofit2:retrofit:${retrofitVersion}",
      "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
      "com.squareup.retrofit2:converter-scalars:${retrofitVersion}",
      "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
  ].forEach { implementation(it) }

}

test {
  useJUnitPlatform()
}